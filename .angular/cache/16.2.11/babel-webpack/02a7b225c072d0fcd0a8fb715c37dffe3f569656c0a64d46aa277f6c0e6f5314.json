{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction BlogComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function BlogComponent_div_2_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const post_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.redirectToPostDatails(post_r1));\n    });\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.category);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.date);\n  }\n}\nexport class BlogComponent {\n  static #_ = this.ɵfac = function BlogComponent_Factory(t) {\n    return new (t || BlogComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BlogComponent,\n    selectors: [[\"app-blog\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[\"class\", \"post_box\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"post_box\", 3, \"click\"]],\n    template: function BlogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Tutti i Post\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, BlogComponent_div_2_Template, 11, 5, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.post_list);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\"p[_ngcontent-%COMP%], h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%]{\\n    text-align: center;\\n    color: white;\\n}\\n\\n.post_box[_ngcontent-%COMP%]{\\n    border-radius: 20px;\\n    height: 50px;\\n    width: 70%;\\n    margin: 10px 15%;\\n    border: 2px solid red;\\n    display: flex;\\n    justify-content: space-around;\\n}\\n\\n.post_box[_ngcontent-%COMP%]:hover{\\n    background-color: orange;\\n    transition-duration: 0.5s;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYmxvZy9ibG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixxQkFBcUI7SUFDckIsYUFBYTtJQUNiLDZCQUE2QjtBQUNqQzs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4Qix5QkFBeUI7QUFDN0IiLCJzb3VyY2VzQ29udGVudCI6WyJwLCBoMSwgaDIsIGgzLCBoNHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLnBvc3RfYm94e1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBtYXJnaW46IDEwcHggMTUlO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgcmVkO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4ucG9zdF9ib3g6aG92ZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XHJcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjVzO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","BlogComponent_div_2_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","_r3","post_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","redirectToPostDatails","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","id","title","category","content","date","BlogComponent","_","_2","selectors","decls","vars","consts","template","BlogComponent_Template","rf","ctx","ɵɵtemplate","BlogComponent_div_2_Template","ɵɵproperty","post_list"],"sources":["C:\\Users\\andre\\Documents\\GitHub\\andreadedonato\\src\\app\\blog\\blog.component.ts","C:\\Users\\andre\\Documents\\GitHub\\andreadedonato\\src\\app\\blog\\blog.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../services/post.service';\nimport { Post } from '../models/post.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements {\n\n  post_list: Post[] = [];\n\n  constructor(private postService: PostService, private router: Router) {\n    this.getCsvData();\n   }\n\n  // ngOnInit(): void {\n  // }\n\n  getCsvData() {\n    this.postService.getCsvData('assets/posts_data.csv').subscribe(\n      data => {\n        this.post_list = this.parseCsvData(data);\n        console.log(this.post_list)\n      },\n      error => {\n        console.log('Si è verificato un errore:', error);\n      }\n    );\n  }\n\n  parseCsvData(csvData: string): Post[] {\n    // Implementa il parsing del CSV qui\n    // Ad esempio, puoi dividere le righe e le colonne\n    let post_string: string[][] = csvData.split('\\n').map(row => row.split(';'));\n    let posts: Post[] = [];\n    for (const iterator of post_string) {\n      let post: Post = {\n        id: Number(iterator[0]),\n        title: iterator[1],\n        category: iterator[2],\n        content: iterator[3],\n        image: iterator[4],\n        date: iterator[5]\n      };\n      posts.push(post);\n    }\n    return posts;\n  }\n\n  redirectToPostDatails(post: Post): void{\n    this.router.navigate(['/post', post.id])\n  }\n\n}\n","<h1>Tutti i Post</h1>\n<div *ngFor=\"let post of post_list\" class=\"post_box\" (click)=\"redirectToPostDatails(post)\">\n    <p>{{post.id}}</p>\n    <p>{{post.title}}</p>\n    <p>{{post.category}}</p>\n    <p>{{post.content}}</p>\n    <p>{{post.date}}</p>\n</div>\n\n"],"mappings":";;;;;ICCAA,EAAA,CAAAC,cAAA,aAA2F;IAAtCD,EAAA,CAAAE,UAAA,mBAAAC,kDAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,qBAAA,CAAAL,OAAA,CAA2B;IAAA,EAAC;IACtFP,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAa,MAAA,GAAW;IAAAb,EAAA,CAAAc,YAAA,EAAI;IAClBd,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAa,MAAA,GAAc;IAAAb,EAAA,CAAAc,YAAA,EAAI;IACrBd,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAa,MAAA,GAAiB;IAAAb,EAAA,CAAAc,YAAA,EAAI;IACxBd,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAa,MAAA,GAAgB;IAAAb,EAAA,CAAAc,YAAA,EAAI;IACvBd,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAa,MAAA,IAAa;IAAAb,EAAA,CAAAc,YAAA,EAAI;;;;IAJjBd,EAAA,CAAAe,SAAA,GAAW;IAAXf,EAAA,CAAAgB,iBAAA,CAAAT,OAAA,CAAAU,EAAA,CAAW;IACXjB,EAAA,CAAAe,SAAA,GAAc;IAAdf,EAAA,CAAAgB,iBAAA,CAAAT,OAAA,CAAAW,KAAA,CAAc;IACdlB,EAAA,CAAAe,SAAA,GAAiB;IAAjBf,EAAA,CAAAgB,iBAAA,CAAAT,OAAA,CAAAY,QAAA,CAAiB;IACjBnB,EAAA,CAAAe,SAAA,GAAgB;IAAhBf,EAAA,CAAAgB,iBAAA,CAAAT,OAAA,CAAAa,OAAA,CAAgB;IAChBpB,EAAA,CAAAe,SAAA,GAAa;IAAbf,EAAA,CAAAgB,iBAAA,CAAAT,OAAA,CAAAc,IAAA,CAAa;;;ADIpB,OAAM,MAAOC,aAAa;EAAA,QAAAC,CAAA,G;qBAAbD,aAAa;EAAA;EAAA,QAAAE,EAAA,G;UAAbF,aAAa;IAAAG,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV1B/B,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAa,MAAA,mBAAY;QAAAb,EAAA,CAAAc,YAAA,EAAK;QACrBd,EAAA,CAAAiC,UAAA,IAAAC,4BAAA,kBAMM;;;QANgBlC,EAAA,CAAAe,SAAA,GAAY;QAAZf,EAAA,CAAAmC,UAAA,YAAAH,GAAA,CAAAI,SAAA,CAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}