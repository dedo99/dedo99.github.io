{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let AppScrollAnimationDirective = /*#__PURE__*/(() => {\n  class AppScrollAnimationDirective {\n    constructor(el, renderer) {\n      this.el = el;\n      this.renderer = renderer;\n      this.isVisible = 'hidden';\n    }\n    onScroll() {\n      const rect = this.el.nativeElement.getBoundingClientRect();\n      // Aggiungi qui la tua logica di gestione dell'animazione\n      const newVisibility = this.isElementInView(rect) ? 'visible' : 'hidden';\n      if (this.isVisible !== newVisibility) {\n        this.isVisible = newVisibility;\n        this.animateElement();\n      }\n    }\n    isElementInView(rect) {\n      // Logica per verificare se l'elemento è nella vista\n      return rect.top >= 100 && rect.top <= window.innerHeight - 150 || rect.bottom >= 100 && rect.bottom <= window.innerHeight - 150;\n    }\n    animateElement() {\n      // Logica per animare l'elemento\n      if (this.isVisible === 'visible') {\n        // Applica l'animazione desiderata, ad esempio fadeIn, slideIn, ecc.\n        this.renderer.addClass(this.el.nativeElement, 'fadeInClass');\n      } else {\n        // Applica l'animazione per nascondere l'elemento\n        this.renderer.removeClass(this.el.nativeElement, 'fadeInClass');\n      }\n    }\n    static #_ = this.ɵfac = function AppScrollAnimationDirective_Factory(t) {\n      return new (t || AppScrollAnimationDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n    static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: AppScrollAnimationDirective,\n      selectors: [[\"\", \"appScrollAnimation\", \"\"]],\n      hostBindings: function AppScrollAnimationDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"scroll\", function AppScrollAnimationDirective_scroll_HostBindingHandler($event) {\n            return ctx.onScroll($event);\n          }, false, i0.ɵɵresolveWindow);\n        }\n      }\n    });\n  }\n  return AppScrollAnimationDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}