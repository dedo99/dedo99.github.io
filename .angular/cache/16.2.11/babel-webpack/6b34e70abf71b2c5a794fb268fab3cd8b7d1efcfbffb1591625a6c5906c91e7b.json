{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AppScrollAnimationDirective {\n  constructor(el, renderer) {\n    this.el = el;\n    this.renderer = renderer;\n    this.isVisible = 'hidden';\n  }\n  onScroll() {\n    const rect = this.el.nativeElement.getBoundingClientRect();\n    // Aggiungi qui la tua logica di gestione dell'animazione\n    const newVisibility = this.isElementInView(rect) ? 'visible' : 'hidden';\n    if (this.isVisible !== newVisibility) {\n      this.isVisible = newVisibility;\n      this.animateElement();\n    }\n  }\n  isElementInView(rect) {\n    // Logica per verificare se l'elemento è nella vista\n    return rect.top >= 100 && rect.top <= window.innerHeight - 150 || rect.bottom >= 100 && rect.bottom <= window.innerHeight - 150;\n  }\n  animateElement() {\n    // Logica per animare l'elemento\n    if (this.isVisible === 'visible') {\n      // Applica l'animazione desiderata, ad esempio fadeIn, slideIn, ecc.\n      this.renderer.addClass(this.el.nativeElement, 'fadeInClass');\n    } else {\n      // Applica l'animazione per nascondere l'elemento\n      this.renderer.removeClass(this.el.nativeElement, 'fadeInClass');\n    }\n  }\n  static #_ = this.ɵfac = function AppScrollAnimationDirective_Factory(t) {\n    return new (t || AppScrollAnimationDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: AppScrollAnimationDirective,\n    selectors: [[\"\", \"appScrollAnimation\", \"\"]],\n    hostBindings: function AppScrollAnimationDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"scroll\", function AppScrollAnimationDirective_scroll_HostBindingHandler($event) {\n          return ctx.onScroll($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    }\n  });\n}","map":{"version":3,"names":["AppScrollAnimationDirective","constructor","el","renderer","isVisible","onScroll","rect","nativeElement","getBoundingClientRect","newVisibility","isElementInView","animateElement","top","window","innerHeight","bottom","addClass","removeClass","_","i0","ɵɵdirectiveInject","ElementRef","Renderer2","_2","selectors","hostBindings","AppScrollAnimationDirective_HostBindings","rf","ctx","$event","ɵɵresolveWindow"],"sources":["C:\\Users\\andre\\Documents\\GitHub\\andreadedonato\\src\\app\\app-scroll-animation.directive.ts"],"sourcesContent":["// app-scroll-animation.directive.ts\r\nimport { Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appScrollAnimation]'\r\n})\r\nexport class AppScrollAnimationDirective {\r\n  private isVisible = 'hidden';\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\r\n\r\n  @HostListener('window:scroll', ['$event'])\r\n  onScroll() {\r\n    const rect = this.el.nativeElement.getBoundingClientRect();\r\n\r\n    // Aggiungi qui la tua logica di gestione dell'animazione\r\n    const newVisibility = this.isElementInView(rect) ? 'visible' : 'hidden';\r\n\r\n    if (this.isVisible !== newVisibility) {\r\n      this.isVisible = newVisibility;\r\n      this.animateElement();\r\n    }\r\n  }\r\n\r\n  private isElementInView(rect: DOMRect) {\r\n    // Logica per verificare se l'elemento è nella vista\r\n    return (\r\n      (rect.top >= 100 && rect.top <= window.innerHeight - 150) ||\r\n      (rect.bottom >= 100 && rect.bottom <= window.innerHeight - 150)\r\n    );\r\n  }\r\n\r\n  private animateElement() {\r\n    // Logica per animare l'elemento\r\n    if (this.isVisible === 'visible') {\r\n      // Applica l'animazione desiderata, ad esempio fadeIn, slideIn, ecc.\r\n      this.renderer.addClass(this.el.nativeElement, 'fadeInClass');\r\n    } else {\r\n      // Applica l'animazione per nascondere l'elemento\r\n      this.renderer.removeClass(this.el.nativeElement, 'fadeInClass');\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAMA,OAAM,MAAOA,2BAA2B;EAGtCC,YAAoBC,EAAc,EAAUC,QAAmB;IAA3C,KAAAD,EAAE,GAAFA,EAAE;IAAsB,KAAAC,QAAQ,GAARA,QAAQ;IAF5C,KAAAC,SAAS,GAAG,QAAQ;EAEsC;EAGlEC,QAAQA,CAAA;IACN,MAAMC,IAAI,GAAG,IAAI,CAACJ,EAAE,CAACK,aAAa,CAACC,qBAAqB,EAAE;IAE1D;IACA,MAAMC,aAAa,GAAG,IAAI,CAACC,eAAe,CAACJ,IAAI,CAAC,GAAG,SAAS,GAAG,QAAQ;IAEvE,IAAI,IAAI,CAACF,SAAS,KAAKK,aAAa,EAAE;MACpC,IAAI,CAACL,SAAS,GAAGK,aAAa;MAC9B,IAAI,CAACE,cAAc,EAAE;;EAEzB;EAEQD,eAAeA,CAACJ,IAAa;IACnC;IACA,OACGA,IAAI,CAACM,GAAG,IAAI,GAAG,IAAIN,IAAI,CAACM,GAAG,IAAIC,MAAM,CAACC,WAAW,GAAG,GAAG,IACvDR,IAAI,CAACS,MAAM,IAAI,GAAG,IAAIT,IAAI,CAACS,MAAM,IAAIF,MAAM,CAACC,WAAW,GAAG,GAAI;EAEnE;EAEQH,cAAcA,CAAA;IACpB;IACA,IAAI,IAAI,CAACP,SAAS,KAAK,SAAS,EAAE;MAChC;MACA,IAAI,CAACD,QAAQ,CAACa,QAAQ,CAAC,IAAI,CAACd,EAAE,CAACK,aAAa,EAAE,aAAa,CAAC;KAC7D,MAAM;MACL;MACA,IAAI,CAACJ,QAAQ,CAACc,WAAW,CAAC,IAAI,CAACf,EAAE,CAACK,aAAa,EAAE,aAAa,CAAC;;EAEnE;EAAC,QAAAW,CAAA,G;qBAnCUlB,2BAA2B,EAAAmB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,SAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA3BvB,2BAA2B;IAAAwB,SAAA;IAAAC,YAAA,WAAAC,yCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;iBAA3BC,GAAA,CAAAvB,QAAA,CAAAwB,MAAA,CAAgB;QAAA,UAAAV,EAAA,CAAAW,eAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}